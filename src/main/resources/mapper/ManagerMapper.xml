<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sayo.qa.dao.ManagerMapper">
  <resultMap id="ManagerResultMap" type="com.sayo.qa.entity.Manager">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="gender" jdbcType="VARCHAR" property="gender" />
    <result column="phone" jdbcType="VARCHAR" property="phone" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="birth" jdbcType="DATE" property="birth" />
    <result column="enterprise_id" jdbcType="INTEGER" property="enterpriseId" />
    <result column="type" jdbcType="VARCHAR" property="type" />
  </resultMap>
  <sql id="selectFields">
    id, name, password, gender, phone, email, birth, enterprise_id, type
  </sql>
  <select id="selectByManagerId" parameterType="java.lang.Integer" resultMap="ManagerResultMap">
    select 
    <include refid="selectFields" />
    from manager
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByManagerId" parameterType="java.lang.Integer">
    delete from manager
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insertManager" parameterType="com.sayo.qa.entity.Manager">
    insert into manager (id, name, password, 
      gender, phone, email, 
      birth, enterprise_id, type
      )
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{gender,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, 
      #{birth,jdbcType=DATE}, #{enterpriseId,jdbcType=INTEGER}, #{type,jdbcType=VARCHAR}
      )
  </insert>
  <update id="updateByManagerId" parameterType="com.sayo.qa.entity.Manager">
    update manager
    set name = #{name,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      birth = #{birth,jdbcType=DATE},
      enterprise_id = #{enterpriseId,jdbcType=INTEGER},
      type = #{type,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>


</mapper>