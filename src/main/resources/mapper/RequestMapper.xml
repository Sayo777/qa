<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sayo.qa.dao.RequestMapper" >
  <resultMap id="BaseResultMap" type="com.sayo.qa.entity.Request" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="req_id" property="reqId" jdbcType="INTEGER" />
    <result column="req_eid" property="reqEid" jdbcType="INTEGER" />
    <result column="contact" property="contact" jdbcType="VARCHAR" />
    <result column="req_type" property="reqType" jdbcType="INTEGER" />
    <result column="product_id" property="productId" jdbcType="INTEGER" />
    <result column="req_time" property="reqTime" jdbcType="TIMESTAMP" />
    <result column="status" property="status" jdbcType="VARCHAR" />
    <result column="reason" property="reason" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, req_id, req_eid, contact, req_type,product_id, req_time, status,reason
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from request
    where id = #{id,jdbcType=INTEGER}
  </select>

  <select id="findReqRowByEid" resultType="int" parameterType="java.lang.Integer" >
    select
    count(*)
    from request
    where req_eid = #{eId,jdbcType=INTEGER}
  </select>
  <select id="selectByReqId" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from request
    where req_id = #{reqId,jdbcType=INTEGER}
  </select>

  <select id="selectByReqEId" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from request
    where req_eid = #{reqEId,jdbcType=INTEGER} limit #{offset},#{limit}
  </select>
  <select id="findRefuseTask" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from request
    where status = '不通过' limit #{offset},#{limit}
  </select>
  <select id="findRefuseTaskRows" resultType="int" >
    select
  count(*)
    from request
    where status = '不通过'
  </select>
  <select id="selectByReqEId0" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from request
    where req_eid = #{reqEId,jdbcType=INTEGER} and status = '通过'
  </select>

  <select id="selectReqByStatus" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from request
    where  status = #{status} limit #{offset},#{limit}
  </select>
  <select id="findReqByStatusRows" resultType="int" parameterType="String">
    select
   count(*)
    from request
    where  status = #{status}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from request
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.sayo.qa.entity.Request" >
    insert into request (id, req_id, req_eid, 
      contact, req_type,product_id, req_time,
      status,reason)
    values (#{id,jdbcType=INTEGER}, #{reqId,jdbcType=INTEGER}, #{reqEid,jdbcType=INTEGER}, 
      #{contact,jdbcType=VARCHAR}, #{reqType,jdbcType=INTEGER}, #{productId,jdbcType=INTEGER}, #{reqTime,jdbcType=TIMESTAMP},
      #{status,jdbcType=VARCHAR},#{reason})
  </insert>
  <insert id="insertSelective" parameterType="com.sayo.qa.entity.Request" >
    insert into request
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="reqId != null" >
        req_id,
      </if>
      <if test="reqEid != null" >
        req_eid,
      </if>
      <if test="contact != null" >
        contact,
      </if>
      <if test="reqType != null" >
        req_type,
      </if>
      <if test="productId != null" >
        product_id,
      </if>
      <if test="reqTime != null" >
        req_time,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="reason != null" >
        reason,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="reqId != null" >
        #{reqId,jdbcType=INTEGER},
      </if>
      <if test="reqEid != null" >
        #{reqEid,jdbcType=INTEGER},
      </if>
      <if test="contact != null" >
        #{contact,jdbcType=VARCHAR},
      </if>
      <if test="reqType != null" >
        #{reqType,jdbcType=INTEGER},
      </if>
        <if test="productId != null" >
        #{productId,jdbcType=INTEGER},
      </if>
      <if test="reqTime != null" >
        #{reqTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="reason != null" >
        #{reason,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.sayo.qa.entity.Request" >
    update request
    <set >
      <if test="reqId != null" >
        req_id = #{reqId,jdbcType=INTEGER},
      </if>
      <if test="reqEid != null" >
        req_eid = #{reqEid,jdbcType=INTEGER},
      </if>
      <if test="contact != null" >
        contact = #{contact,jdbcType=VARCHAR},
      </if>
      <if test="reqType != null" >
        req_type = #{reqType,jdbcType=INTEGER},
      </if>
      <if test="productId != null" >
        product_id = #{productId,jdbcType=INTEGER},
      </if>
      <if test="reqTime != null" >
        req_time = #{reqTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="reason != null" >
        reason = #{reason,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sayo.qa.entity.Request" >
    update request
    set req_id = #{reqId,jdbcType=INTEGER},
      req_eid = #{reqEid,jdbcType=INTEGER},
      contact = #{contact,jdbcType=VARCHAR},
      req_type = #{reqType,jdbcType=INTEGER},
      product_id = #{productId,jdbcType=INTEGER},
      req_time = #{reqTime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=VARCHAR},
      reason = #{reason,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <update id="updateReqStatusById" >
    update request
    set status = #{status}
    where id = #{id}
  </update>
</mapper>